
switches:
  keycloak-enabled: false
  prometheus-enabled: false
  grafana-enabled: false
  kiali-enabled: false
  jaeger-enabled: false

prometheus:
  serviceAccounts:
    alertmanager:
      create: false
    pushgateway:
      create: false
  alertmanager:
    enabled: false
  pushgateway:
    enabled: false


# https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
grafana:
  replicas: 1
  persistence:
    enabled: false
  grafana.ini:
    server:
      root_url: http://grafana.WILDCARD_BASE_DOMAIN
    auth:
      disable_login_form: true
      oauth_auto_login: true
    auth.basic:
      enabled: false
    # azuread supports 'allowed_groups': https://grafana.com/docs/grafana/latest/auth/azuread/#configure-allowed-groups-and-domains
    # generic_oauth supports 'role_attribute_path': https://grafana.com/docs/grafana/latest/auth/generic-oauth/#role-mapping
    auth.generic_oauth:
      name: OpenId
      enabled: true
      client_id: grafana-client
      client_secret: GGGGGGGG
      scopes: openid profile email
      auth_url: https://keycloak.WILDCARD_BASE_DOMAIN/auth/realms/mesh/protocol/openid-connect/auth
      token_url: https://keycloak.WILDCARD_BASE_DOMAIN/auth/realms/mesh/protocol/openid-connect/token
      api_url: https://keycloak.WILDCARD_BASE_DOMAIN/auth/realms/mesh/protocol/openid-connect/userinfo
      allow_sign_up: true
      tls_skip_verify_insecure: true
      role_attribute_path: contains(groups[*], 'grafana_admins') && 'Admin' || 'Viewer'
      # allowed_domains (valid email domain...)
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://addons-prometheus-server.istio-system.svc
        access: proxy
        isDefault: true
  dashboardProviders: 
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      - name: 'builtin'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: false
        options:
          path: /var/lib/grafana/dashboards/builtin
      - name: 'customized'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        editable: false
        options:
          path: /var/lib/grafana/dashboards/customized
  dashboards:
    builtin:
      mesh:
        url: https://grafana.com/api/dashboards/7639/revisions/33/download
        datasource: Prometheus
      service:
        url: https://grafana.com/api/dashboards/7636/revisions/33/download
        datasource: Prometheus
      workload:
        url: https://grafana.com/api/dashboards/7630/revisions/33/download
        datasource: Prometheus
      controlplane:
        url: https://grafana.com/api/dashboards/7645/revisions/33/download
        datasource: Prometheus

# https://github.com/jaegertracing/helm-charts/blob/master/charts/jaeger/values.yaml   
jaeger:
  agent:
    enabled: false
  query:
    agentSidecar: 
      enabled: false
  collector:
    service:
      type: ClusterIP
      grpc:
        port: 14250
      http: {}
      zipkin: 
        port: 9411
  provisionDataStore:
    cassandra: true
  storage:
    cassandra:
      host: addons-jaeger-cassandra
      nameOverride: addons-jaeger-cassandra
  cassandra:
    persistence:
      enabled: false
    fullnameOverride: addons-jaeger-cassandra
    config:
      cluster_size: 1

kiali-server:
  fullnameOverride: ''
  deployment:
    image_pull_policy: IfNotPresent
  auth:
    strategy: anonymous


# helm repo add codecentric https://codecentric.github.io/helm-charts/
# helm install keycloak codecentric/keycloak -f ./keycloak.values.yaml
keycloak:
  postgresql:
    enabled: false
  extraVolumes: |
    - name: server-certificate
      secret:
        secretName: addons-certificates
  extraVolumeMounts: |
    - name: server-certificate
      mountPath: /etc/x509/https
      readOnly: true
  extraEnv: |
    - name: KEYCLOAK_USER
      value: admin
    - name: KEYCLOAK_PASSWORD
      value: password
    - name: PROXY_ADDRESS_FORWARDING
      value: 'true'
